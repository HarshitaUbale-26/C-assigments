Polymorphism (Q1â€“5)
What is polymorphism in C++ and why do we use it?
âž¤ Polymorphism lets the same function or object behave in different ways. It's useful for code flexibility.

What is compile-time polymorphism? Can you give a simple example?
âž¤ Happens at compile time, using function or operator overloading.
Example:

cpp
Copy
Edit
void show(int x) { cout << x; }
void show(double y) { cout << y; }
What is runtime polymorphism? Can you give a simple example?
âž¤ Happens at runtime using virtual functions and inheritance.
Example:

cpp
Copy
Edit
class Animal { public: virtual void sound() { cout << "Animal"; } };
class Dog : public Animal { public: void sound() override { cout << "Bark"; } };
Whatâ€™s the difference between compile-time and runtime polymorphism?
âž¤ Compile-time: decided during compilation.
âž¤ Runtime: decided while program runs.

How does C++ use polymorphism in programs?
âž¤ Through function overloading, operator overloading, and virtual functions.

ðŸ”· Pointers (Q6â€“15)
What are pointers in C++ and what do they do?
âž¤ Pointers store the memory address of another variable.

How do you write and set a pointer in C++?

cpp
Copy
Edit
int x = 10;
int* ptr = &x;
How do you get the value a pointer is pointing to?
âž¤ Use *ptr to access the value:

cpp
Copy
Edit
cout << *ptr;
What is pointer arithmetic?
âž¤ You can move through memory with operations like ptr++, ptr--.

What mistakes should we avoid when using pointers?
âž¤ Using null/uninitialized pointers, memory leaks, or accessing deleted memory.

How do pointers work with objects in C++?
âž¤ You can point to objects just like variables:

cpp
Copy
Edit
MyClass obj;
MyClass* ptr = &obj;
How do you create an object using a pointer?

cpp
Copy
Edit
MyClass* ptr = new MyClass();
Can you show how to use a pointer to access an objectâ€™s data or functions?
âž¤ Use ->:

cpp
Copy
Edit
ptr->show();
Whatâ€™s the difference between a pointer and a reference to an object?
âž¤ Pointer can be null and reassigned. Reference must refer to one object and can't be changed.

How do you delete an object made with a pointer?
âž¤ Use delete:

cpp
Copy
Edit
delete ptr;
ðŸ”· The this Pointer (Q16â€“18)
What is the this pointer in C++?
âž¤ It's a hidden pointer that refers to the current object.

How is the this pointer used inside class functions?
âž¤ Used to access the current objectâ€™s members:

cpp
Copy
Edit
this->x = x;
How can you return the object using the this pointer?

cpp
Copy
Edit
MyClass& setVal(int x) {
    this->x = x;
    return *this;
}
ðŸ”· Virtual Functions & VTable (Q19â€“23)
What is a virtual function and why do we use it?
âž¤ It allows derived classes to override functions for runtime polymorphism.

How do you write (declare) a virtual function in C++?

cpp
Copy
Edit
virtual void display();
What is a vtable (virtual table) and how does it help virtual functions?
âž¤ It's a table that stores function pointers. Used to call the right function at runtime.

What is a pure virtual function and how do you declare it?
âž¤ A virtual function with = 0, must be overridden:

cpp
Copy
Edit
virtual void draw() = 0;
Can you give an example of a class with a pure virtual function?

cpp
Copy
Edit
class Shape {
    virtual void draw() = 0;
};
ðŸ”· Abstract Classes & Inheritance (Q24â€“33)
What happens when a class has a pure virtual function?
âž¤ It becomes an abstract class and canâ€™t be instantiated.

How do you use inheritance and virtual functions to make polymorphism?
âž¤ Use base class with virtual function, and derived class overrides it.

Can you give an example using a base class and a derived class for polymorphism?

cpp
Copy
Edit
Animal* a = new Dog();
a->sound();  // calls Dog's sound()
What is late binding and how does it work with polymorphism?
âž¤ Deciding which function to call at runtime using virtual functions.

How does the compiler handle polymorphism in C++?
âž¤ It uses vtable and vpointer to manage function calls.

What is an abstract class in C++?
âž¤ A class with one or more pure virtual functions.

How is an abstract class different from a normal class?
âž¤ Abstract classes canâ€™t be used to create objects.

What is an abstract method and how do you use it?
âž¤ A method with = 0, must be overridden in the derived class.

Can you show an example using an abstract class?

cpp
Copy
Edit
class Vehicle {
    virtual void move() = 0;
};
Why should we use abstract classes?
âž¤ To force derived classes to implement specific functions.

ðŸ”· Exception Handling (Q34â€“41)
What is exception handling and why is it needed?
âž¤ To catch and handle errors without crashing the program.

How do you throw and catch an exception in C++?

cpp
Copy
Edit
try { throw 1; } catch (int e) { cout << "Error"; }
What are try, catch, and throw blocks?
âž¤ try: risky code
âž¤ throw: send error
âž¤ catch: handle error

What does the catch block do in C++?
âž¤ Handles the exception that was thrown.

Can you show how to catch more than one exception?

cpp
Copy
Edit
try { ... }
catch (int) { ... }
catch (char) { ... }
What happens when we use the throw keyword?
âž¤ It sends an exception to be handled by a catch.

What is the finally block in exception handling?
âž¤ C++ doesnâ€™t have finally; use destructors instead.

How do you make your own exception class?

cpp
Copy
Edit
class MyError : public exception {
    const char* what() const throw() { return "My error"; }
};
ðŸ”· Templates (Q42â€“50)
What are templates and why do we use them?
âž¤ To write code that works with any data type.

How do you write a function template in C++?

cpp
Copy
Edit
template <typename T>
T add(T a, T b) { return a + b; }
Can you show an example of a function template that works with any type?

cpp
Copy
Edit
add<int>(3, 4);
add<double>(2.1, 3.3);
What is a class template and how is it different from a function template?
âž¤ Class templates create objects with any data type.

How do you write a class template?

cpp
Copy
Edit
template <class T>
class Box {
    T value;
};
Can you show a class template for a simple data structure?

cpp
Copy
Edit
template <class T>
class Box {
    T value;
public:
    void set(T v) { value = v; }
    T get() { return value; }
};
How do you create (use) a template class?

cpp
Copy
Edit
Box<int> b;
b.set(10);
Why are templates better than writing separate classes for each type?
âž¤ They reduce code duplication and work with all types.

How do templates help us reuse code?
âž¤ Templates let you write one generic version of a function or class that works with any data type, so you donâ€™t have to rewrite the same code for int, float, string, etc.

Example:

cpp
Copy
Edit
template <typename T>
T getMax(T a, T b) {
    return (a > b) ? a : b;
}
You can use this for any type:

cpp
Copy
Edit
getMax(3, 7);         // int
getMax(2.5, 4.8);     // double
getMax('a', 'z');     // char
